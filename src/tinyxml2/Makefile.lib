#****************************************************************************
#
# Makefile for TinyXml test.
# Lee Thomason
# www.grinninglizard.com
#
# This is a GNU make (gmake) makefile
#****************************************************************************

# DEBUG can be set to YES to include debugging info, or NO otherwise
DEBUG          := NO

# PROFILE can be set to YES to include profiling info, or NO otherwise
PROFILE        := NO

# TINYXML_USE_STL can be used to turn on STL support. NO, then STL
# will not be used. YES will include the STL files.
TINYXML_USE_STL := NO

#****************************************************************************

CC     := ${CROSS_COMPILE}gcc
CXX    := ${CROSS_COMPILE}g++
LD     := ${CROSS_COMPILE}g++
AR     := ${CROSS_COMPILE}ar rc
RANLIB := ${CROSS_COMPILE}ranlib

DEBUG_CFLAGS     := -Wall -Wno-format -g -DDEBUG ${CFLAGS}
RELEASE_CFLAGS   := -Wall -Wno-unknown-pragmas -Wno-format -O3 ${CFLAGS}

LIBS		 :=

DEBUG_CXXFLAGS   := ${DEBUG_CFLAGS} 
RELEASE_CXXFLAGS := ${RELEASE_CFLAGS}

DEBUG_LDFLAGS    := -g
RELEASE_LDFLAGS  :=

ifeq (YES, ${DEBUG})
   CFLAGS       := ${DEBUG_CFLAGS}
   CXXFLAGS     := ${DEBUG_CXXFLAGS}
   LDFLAGS      := ${DEBUG_LDFLAGS}
else
   CFLAGS       := ${RELEASE_CFLAGS}
   CXXFLAGS     := ${RELEASE_CXXFLAGS}
   LDFLAGS      := ${RELEASE_LDFLAGS}
endif

ifeq (YES, ${PROFILE})
   CFLAGS   := ${CFLAGS} -pg -O3
   CXXFLAGS := ${CXXFLAGS} -pg -O3
   LDFLAGS  := ${LDFLAGS} -pg
endif

CXXFLAGS := ${CXXFLAGS} ${EXTRA_CXXFLAGS}

#****************************************************************************
# Preprocessor directives
#****************************************************************************

ifeq (YES, ${TINYXML_USE_STL})
  DEFS := -DTIXML_USE_STL
else
  DEFS :=
endif

#****************************************************************************
# Include paths
#****************************************************************************

#INCS := -I/usr/include/g++-2 -I/usr/local/include
INCS :=


#****************************************************************************
# Makefile code common to all platforms
#****************************************************************************

CFLAGS   := ${CFLAGS}   ${DEFS}
CXXFLAGS := ${CXXFLAGS} ${DEFS}

#****************************************************************************
# Targets of the build
#****************************************************************************

BINOUTPUT := xmltest
OUTPUT := libtinyxml2.a
OUTPUT2 := libtinyxml2.so

all: ${OUTPUT} ${OUTPUT2} ${BINOUTPUT}

#****************************************************************************
# Source files
#****************************************************************************

SRCS := xmltest.cpp tinyxml2.cpp

# Add on the sources for libraries
SRCS := ${SRCS}

BINOBJS := $(addsuffix .o,$(basename ${SRCS}))

OBJS := tinyxml2.o

#****************************************************************************
# Output
#****************************************************************************

${OUTPUT}: ${OBJS}
	$(AR) $@ $?

${OUTPUT2}: ${OBJS}
	$(CC) $(CFLAGS) -shared -o $@ -Wl,-soname,$@ $?

${BINOUTPUT}: ${BINOBJS}
	$(CXX) $(CFLAGS) -o $@ ${BINOBJS}

#****************************************************************************
# common rules
#****************************************************************************

# Rules for compiling source files to object files
%.o : %.cpp
	${CXX} -c ${CXXFLAGS} ${INCS} $< -o $@

%.o : %.c
	${CC} -c ${CFLAGS} ${INCS} $< -o $@

dist:
	bash makedistlinux

clean:
	-rm -f core ${OBJS} ${OUTPUT} ${OUTPUT2} ${BINOBJS} ${BINOUTPUT}

depend:
	#makedepend ${INCS} ${SRCS}

install: uninstall
	mkdir -p ../../../lib
	cp libtinyxml2* ../../../lib
	mkdir -p ../../../include/
	cp *.h ../../../include/

uninstall:
	rm -f ../../../lib/libtinyxml2* ../../../include/tinyxml2*
